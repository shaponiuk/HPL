sus fun (Maybe (
    (
        Maybe (Int ()), 
        Maybe (())
    )
) -> ()) f (Nothing ()) = ();
sus fun (Maybe (
    (
        Maybe (Int ()), 
        Maybe (())
    )
) -> ()) f (Just (((x, Nothing ())))) = ();

sus fun (Int ()) main () = force let
    () :: () = f (Nothing ());
    () :: () = f (Just ((Nothing (), Nothing ())));
in 0;